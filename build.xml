<?xml version='1.0' encoding='utf-8'?>
<project default="jar" basedir=".">
  <!-- program name -->
  <property name="project.name" value="nixnote"/>
  <property name="application.name" value="sandbox"/>

  <!-- targeted QtJambi library version  -->
  <property name="qtjambi.ver" value="4.5.2_01"/>

  <!-- project directory hierarchy -->
  <property name="src.dir" value="src"/>
  <property name="classes.dir" value="build"/>
  <property name="dist.dir" value="dist"/>
  <property name="lib.dir" value="lib"/>
  <property name="bin.dir" value="bin"/>
  <property name="doc.dir" value="doc"/>
  <property name="tr.dir" value="translations"/>

  <!-- needed for running -->

  <!-- debug -->
  <property name="javac.debug" value="true"/>

  <!-- run parameter -->
  <!-- heap -->
  <property name="jvm.xms" value="256M"/><!-- initial memory size -->
  <property name="jvm.xmm" value="512M"/><!-- maximum memory size -->
  <property name="jvm.newratio" value="2"/>
  <property name="jvm.gcs" value="incgc"/><!-- GC strategy -->

  <!-- product jar file -->
  <property name="jar.name" value="nixnote.jar"/>

  <!-- product exec command -->
  <property name="shell.command" value="nixnote.sh"/>
  <property name="bat.command" value="nixnote.bat"/>

  <!-- qt utils -->
  <property name="linguist.update" value="lupdate"/>
  <property name="linguist.release" value="lrelease"/>

  <!-- translations -->
  <property name="linguist.project" value="nixnote.pro"/>

  <!-- documents -->
  <property name="doc.changelog" value="changelog.txt"/>
  <property name="doc.release" value="release.txt"/>
  <property name="doc.readme" value="README.txt"/>

  <!-- check os -->
  <condition property="isWindows">
      <os family="windows" />
  </condition>
  <condition property="isLinux">
      <os name="Linux" arch="i386" />
  </condition>
  <condition property="isLinux64">
      <os name="Linux" arch="amd64" />
  </condition>
  <condition property="isMacOSX">
      <os name="Mac OS X" />
  </condition>

  <!-- flexible looking for qtjambi library path -->
  <target name="set-jambi-path32" depends="set-jambi-path" unless="qtlib.dir">
      <available file="../qtjambi-linux32-lgpl-${qtjambi.ver}"
                 property="qtlib.dir" value="../qtjambi-linux32-lgpl-${qtjambi.ver}"/>
      <available file="../qtjambi-linux32-community-${qtjambi.ver}"
                 property="qtlib.dir" value="../qtjambi-linux32-community-${qtjambi.ver}"/>
  </target>
  <target name="set-jambi-path64" depends="set-jambi-path" unless="qtlib.dir">
      <available file="../qtjambi-linux64-lgpl-${qtjambi.ver}"
                 property="qtlib.dir" value="../qtjambi-linux64-lgpl-${qtjambi.ver}"/>
      <available file="../qtjambi-linux64-community-${qtjambi.ver}"
                 property="qtlib.dir" value="../qtjambi-linux64-community-${qtjambi.ver}"/>
  </target>
  <target name="set-jambi-pathmac" depends="set-jambi-path" unless="qtlib.dir">
      <available file="../qtjambi-macosx-lgpl-${qtjambi.ver}"
                 property="qtlib.dir" value="../qtjambi-macosx-lgpl-${qtjambi.ver}"/>
      <available file="../qtjambi-macosx-community-${qtjambi.ver}"
                 property="qtlib.dir" value="../qtjambi-macosx-community-${qtjambi.ver}"/>
  </target>
  <target name="set-jambi-path" unless="qtlib.dir">
      <available file="${user.home}/lib/qtjambi/qtjambi-${qtjambi.ver}.jar" 
                 property="qtlib.dir" value="${user.home}/lib/qtjambi"/>
      <available file="${user.home}/lib/qtjambi-${qtjambi.ver}.jar" 
                 property="qtlib.dir" value="${user.home}/lib"/>
      <available file="lib/qtjambi-${qtjambi.ver}.jar"
                 property="qtlib.dir" value="lib"/>
  </target>

  <!-- os dependent library path and lib file -->
  <target name="check_syslib_path" depends="lib-if_windows, lib-if_linux, lib-if_linux64"/>

  <target name="lib-if_windows" if="isWindows">
      <property name="system.lib.dir" value="D:/NeverNote/lib"/>
      <property name="qtlib.dir" value="D:/qtjambi-${qtjambi.ver}"/>
      <property name="qtjambi-platform" value="win32-msvc2005"/>
  </target>

  <target name="lib-if_linux" depends="set-jambi-path32" if="isLinux">
      <property name="system.lib.dir" value="/usr/share/java"/>
      <property name="qtjambi.platform" value="linux32-gcc"/>
      <echo message="use qtjambi library at ${qtlib.dir}"/>
  </target>
  <target name="lib-if_linux64" depends="set-jambi-path64" if="isLinux64">
      <property name="system.lib.dir" value="/usr/share/java"/>
      <property name="qtjambi.platform" value="linux64-gcc"/>
      <echo message="use qtjambi library at ${qtlib.dir}"/>
  </target>
  <target name="lib-if_macosx" depends="set-jambi-pathmac" if="isMacOSX">
      <property name="system.lib.dir" value="/Library/Java/Extensions"/>
      <property name="qtjambi.platform" value="macosx-gcc"/>
      <echo message="use qtjambi library at ${qtlib.dir}"/>
  </target>

  <!-- compiler classpath -->
  <target name="set_classpath" depends="check_syslib_path">
    <path id="java.classpath">
      <!-- bundled library -->
      <pathelement location="${lib.dir}/apache-mime4j-0.6.jar"/>
      <pathelement location="${lib.dir}/commons-codec-1.5.jar"/>
      <pathelement location="${lib.dir}/commons-compress-1.2.jar"/>
      <pathelement location="${lib.dir}/commons-lang3-3.0.jar"/>
      <pathelement location="${lib.dir}/commons-logging-1.1.1.jar"/>
      <pathelement location="${lib.dir}/evernote-api-1.20.jar"/>
      <pathelement location="${lib.dir}/libthrift.jar"/>
      <pathelement location="${lib.dir}/log4j-1.2.14.jar"/>
      <pathelement location="${lib.dir}/h2-1.3.158.jar"/>
      <pathelement location="${lib.dir}/jtidy-r938.jar"/>
      <pathelement location="${lib.dir}/httpclient-4.1.1.jar"/>
      <pathelement location="${lib.dir}/httpcore-4.1.jar"/>
      <pathelement location="${lib.dir}/httpmime-4.1.1.jar"/>
      <pathelement location="${lib.dir}/jaxen-1.1.3.jar"/>
      <pathelement location="${lib.dir}/jazzy.jar"/>
      <pathelement location="${lib.dir}/pdfbox-app-1.6.0.jar"/>
      <pathelement location="${lib.dir}/poi-3.7-20101029.jar"/>
      <pathelement location="${lib.dir}/poi-ooxml-3.7.jar"/>
      <pathelement location="${lib.dir}/poi-ooxml-schemas-3.7-20101029.jar"/>
      <pathelement location="${lib.dir}/poi-scratchpad-3.7-20101029.jar"/>
      <pathelement location="${lib.dir}/scribe-1.3.0.jar"/>
      <pathelement location="${lib.dir}/tika.jar"/>
      <pathelement location="${lib.dir}/xmlbeans-2.3.0.jar"/>
      <pathelement location="${lib.dir}/xsdlib-20060615.jar"/>
      <!-- dependent library -->
      <pathelement location="${qtlib.dir}/qtjambi-${qtjambi.ver}.jar"/>
      <pathelement location="${qtlib.dir}/qtjambi-${qtjambi.platform}-${qtjambi.ver}.jar"/>
      <pathelement location="${qtlib.dir}/qtjambi-util-${qtjambi.ver}.jar"/>
    </path>
  </target>

  <target name="init" depends="set_classpath">
    <tstamp/>
    <mkdir dir="${classes.dir}"/>
  </target>

  <!-- translate -->
  <target name="update-tr" depends="update-tr-if_linux, update-tr-if_linux64, update-tr-if_windows"/>
  <target name="update-tr-if_windows" depends="init" if="isWindows">
    <exec dir="." executable="cmd" os="Windows NT">
        <arg line="/c ${bin.dir}\${linguist.update} ${linguist.project}"/>
    </exec>
  </target>
  <target name="update-tr-if_linux" depends="init" if="isLinux">
    <exec executable="${linguist.update}">
        <arg line="${linguist.project}"/>
    </exec>
  </target>
  <target name="update-tr-if_linux64" depends="init" if="isLinux64">
    <exec executable="${linguist.update}">
        <arg line="${linguist.project}"/>
    </exec>
  </target>

  <target name="release-tr" depends="release-tr-if_linux, release-tr-if_linux64, release-tr-if_windows"/>
  <target name="release-tr-if_windows" depends="init" if="isWindows">
    <exec dir="." executable="cmd" os="Windows NT">
        <arg line="/c ${bin.dir}\${linguist.release} ${linguist.project}"/>
    </exec>
  </target>
  <target name="release-tr-if_linux" depends="init" if="isLinux">
    <exec executable="${linguist.release}">
        <arg line="${linguist.project}"/>
    </exec>
  </target>
  <target name="release-tr-if_linux64" depends="init" if="isLinux64">
    <exec executable="${linguist.release}">
        <arg line="${linguist.project}"/>
    </exec>
  </target>

  <!-- build -->
  <target name="compile" depends="init">
    <javac srcdir="${src.dir}"
       destdir="${classes.dir}"
       debug="${javac.debug}"
       includeantruntime="false">
       <classpath refid="java.classpath"/>
    </javac>
  </target>

  <target name="resources" depends="init,release-tr">
      <mkdir dir="${classes.dir}/cx/fbn/nevernote/icons"/>
      <copy todir="${classes.dir}/cx/fbn/nevernote/icons">
	  <fileset dir="${src.dir}/cx/fbn/nevernote/icons"/>
      </copy>
      <mkdir dir="${classes.dir}/translations"/>
      <copy todir="${classes.dir}/translations">
          <fileset file="translations/*.qm"/>
      </copy>
  </target>

  <target name="jar" depends="compile,resources,release-tr">
    <jar destfile="${jar.name}" basedir="${classes.dir}"/>
  </target>

  <!-- make distribution -->
  <target name="dist-init" depends="init">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/lib"/>
    <mkdir dir="${dist.dir}/bin"/>
    <mkdir dir="${dist.dir}/doc"/>
  </target>

  <target name="dist" depends="jar, dist-init">
     <copy file="${bin.dir}/${shell.command}" todir="${dist.dir}/bin"/>
     <copy file="${bin.dir}/${bat.command}" todir="${dist.dir}/bin"/>
     <copy todir="${dist.dir}/lib">
       <fileset file="${jar.name}"/>
       <fileset dir="${lib.dir}"/>
     </copy>
     <copy todir="${dist.dir}/doc">
       <fileset file="${doc.changelog}"/>
       <fileset file="${doc.release}"/>
       <fileset file="${doc.readme}"/>
       <fileset dir="${doc.dir}"/>
     </copy>
     <exec dir="dist" executable="tar">
         <arg line="czf ../../nixnote-bin.tar.gz ."/>
     </exec>
  </target>

  <!-- test run -->
  <target name="run-init" depends="init, resources, jar">
    <tstamp/>
    <mkdir dir="res"/>
  </target>

  <target name="run" depends="run-init">
    <java classname="cx.fbn.nevernote.NeverNote"
      fork="yes" maxmemory="${jvm.xmm}"
      classpathref="java.classpath" classpath="${jar.name}">
      <jvmarg value="-XX:NewRatio=${jvm.newratio}"/>
      <jvmarg value="-X${jvm.gcs}"/>
      <arg value="--name=${application.name}"/>
    </java>
  </target>

  <!-- script test run -->
  <target name="run-script" depends="run-if_windows, run-if_linux, run-if_linux64"
   description="run starter script">
  </target>

  <target name="run-if_windows" depends="run-init" if="isWindows">
    <exec dir="." executable="cmd" os="Windows NT">
        <arg line="/c ${bin.dir}\${batch.command}"/>
    </exec>
  </target>
  <target name="run-if_linux" depends="run-init" if="isLinux">
    <exec executable="${bin.dir}/${shell.command}"/>
  </target>
  <target name="run-if_linux64" depends="run-init" if="isLinux64">
    <exec executable="${bin.dir}/${shell.command}"/>
  </target>

  <!-- clean up -->
  <target name="clean"
   description="clean up without classes and run env" >
    <delete dir="${dist.dir}" />
    <delete file="${jar.name}"/>
  </target>

  <target name="all-clean" depends="clean"
   description="clean up all" >
    <delete dir="${classes.dir}" />
    <delete dir="${logs.dir}" />
    <delete dir="${db.dir}" />
    <delete file="secure.txt"/>
    <delete>
          <fileset file="${tr.dir}/*.qm"/>
          <fileset file="${tr.dir}/*.po"/>
    </delete>
    <delete dir="res"/>
  </target>

</project>
